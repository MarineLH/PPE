using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace PPE_ABAS
{
    /// <summary>
    /// Classe globale qui stocke toutes les requêtes SQL qui seront utilisées dans le programme
    /// </summary>
    public static class SQLQueries
    {
	// TODO : Ajouter les requetes SQL sans remplacer

        /// <summary>
        /// Récupérer la liste des bâtiments pour la combobox de connexion
        /// </summary>
        public static string connexSelectBatiments = "SELECT * FROM Batiment;";

        /// <summary>
        /// Récupérer le bâtiment sélectionné dans la combobox précédente
        /// </summary>
        public static string connexSelectUnBatiment = "SELECT * FROM Batiment WHERE bat_libelle = @libelle;";

        /// <summary>
        /// Récupérer les réservations pour aujourd'hui et le futur d'un bâtiment
        /// </summary>
        public static string hotelGetReservations = @"SELECT * FROM Reservation 
                                                    WHERE DATE(res_date) >= DATE(NOW()) 
                                                    AND Chambre_Etage_Hotel_hotel_bat_id = @batId";

        /// <summary>
        /// Récupérer les anciennes réservations passées
        /// </summary>
        public static string hotelGetHistorique = @"SELECT * FROM Reservation
                                                    WHERE DATE(res_date) < DATE(NOW())
                                                    AND Chambre_Etage_Hotel_hotel_bat_id = @batId";

        /// <summary>
        /// Récupère les infos d'un client pour un ID donné
        /// </summary>
        public static string getClientById = "SELECT * FROM Client WHERE cli_id = @cliId";

        /// <summary>
        /// Récupère tous les clients enregistrés dans la base de données
        /// </summary>
        public static string getClients = "SELECT * FROM Client";

        /// <summary>
        /// Ajoute un client
        /// </summary>
        public static string addClient = @"INSERT INTO Client(
                                            cli_nom,
                                            cli_prenom,
                                            cli_tel,
                                            cli_adl1,
                                            cli_adl2,
                                            cli_adcp,
                                            cli_adville,
                                            cli_mail) VALUES (
                                            @cliNom,
                                            @cliPrenom,
                                            @cliTel,
                                            @cliAd1,
                                            @cliAd2,
                                            @cliCP,
                                            @cliVille,
                                            @cliMail)";


         /// <summary>
        /// Récupération d'un client du restaurant avec son cli_id en paramètre
        /// </summary>
        public static string restaurantSelectClientWithId = "SELECT * FROM Client WHERE cli_id = @id;";


        /// <summary>
        /// Récupère la liste des réservations pour un client :
        /// Le nombre de tables pour le client pour une date et heure donnée
        /// En fonction du bâtiment sélectionné  et la date et l'heure d'aujourd'hui
        /// </summary>
        public static string restaurantSelectReservations = @"SELECT*, COUNT(*) AS nbtables FROM reserverRestaurant 
                                                              WHERE res_dh >= DATE(NOW()) AND Table_Restaurant_resto_bat_id = @batId 
                                                              GROUP BY Client_cli_id, res_dh 
                                                              ORDER BY res_dh;";
        /// <summary>
        /// Récupère le nombre de table maximum par batitment
        /// </summary>
        public static string restaurantGetMaxTableBatiment = "SELECT COUNT(*) AS NBTABLES FROM `Table` WHERE Restaurant_resto_bat_id = @batId";

        /// <summary>
        /// Récupération de la liste de personne en fonction de l'id du bâtiment en paramètre
        /// </summary>
        public static string getPersonnel = "SELECT * FROM Personnel WHERE Batiment_bat_id = @batId";

        /// <summary>
        /// Récupération d'un user en fonction de son id en paramètre
        /// </summary>
        public static string getPersonnelById = "SELECT * FROM Personnel WHERE pers_id  = @persId";

    }
}